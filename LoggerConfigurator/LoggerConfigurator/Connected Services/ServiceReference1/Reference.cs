//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace LoggerConfigurator.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/FigKeyLoggerWcf")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginUser", Namespace="http://schemas.datacontract.org/2004/07/FigKeyLoggerWcf.Molde")]
    public enum LoginUser : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ADMIN_USER = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ORDINARY_USER = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginResult", Namespace="http://schemas.datacontract.org/2004/07/FigKeyLoggerWcf.Molde")]
    public enum LoginResult : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        USER_NAME_ERR = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        USER_PWD_ERR = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        USER_NAME_PWD_ERR = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FAIL_EXCEP = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUCCESS = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="f_user", Namespace="http://schemas.datacontract.org/2004/07/FigKeyLoggerWcf.DB")]
    [System.SerializableAttribute()]
    public partial class f_user : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> create_dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> last_update_dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string phoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Data.Linq.Binary pictureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> statusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int user_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> user_typeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string usernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> create_date {
            get {
                return this.create_dateField;
            }
            set {
                if ((this.create_dateField.Equals(value) != true)) {
                    this.create_dateField = value;
                    this.RaisePropertyChanged("create_date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> last_update_date {
            get {
                return this.last_update_dateField;
            }
            set {
                if ((this.last_update_dateField.Equals(value) != true)) {
                    this.last_update_dateField = value;
                    this.RaisePropertyChanged("last_update_date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                if ((object.ReferenceEquals(this.phoneField, value) != true)) {
                    this.phoneField = value;
                    this.RaisePropertyChanged("phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Data.Linq.Binary picture {
            get {
                return this.pictureField;
            }
            set {
                if ((object.ReferenceEquals(this.pictureField, value) != true)) {
                    this.pictureField = value;
                    this.RaisePropertyChanged("picture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> status {
            get {
                return this.statusField;
            }
            set {
                if ((this.statusField.Equals(value) != true)) {
                    this.statusField = value;
                    this.RaisePropertyChanged("status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int user_id {
            get {
                return this.user_idField;
            }
            set {
                if ((this.user_idField.Equals(value) != true)) {
                    this.user_idField = value;
                    this.RaisePropertyChanged("user_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> user_type {
            get {
                return this.user_typeField;
            }
            set {
                if ((this.user_typeField.Equals(value) != true)) {
                    this.user_typeField = value;
                    this.RaisePropertyChanged("user_type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.usernameField, value) != true)) {
                    this.usernameField = value;
                    this.RaisePropertyChanged("username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IFigKeyLoggerService")]
    public interface IFigKeyLoggerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFigKeyLoggerService/GetData", ReplyAction="http://tempuri.org/IFigKeyLoggerService/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFigKeyLoggerService/GetData", ReplyAction="http://tempuri.org/IFigKeyLoggerService/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFigKeyLoggerService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IFigKeyLoggerService/GetDataUsingDataContractResponse")]
        LoggerConfigurator.ServiceReference1.CompositeType GetDataUsingDataContract(LoggerConfigurator.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFigKeyLoggerService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IFigKeyLoggerService/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<LoggerConfigurator.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(LoggerConfigurator.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFigKeyLoggerService/Login", ReplyAction="http://tempuri.org/IFigKeyLoggerService/LoginResponse")]
        LoggerConfigurator.ServiceReference1.LoginResult Login(string username, string password, LoggerConfigurator.ServiceReference1.LoginUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFigKeyLoggerService/Login", ReplyAction="http://tempuri.org/IFigKeyLoggerService/LoginResponse")]
        System.Threading.Tasks.Task<LoggerConfigurator.ServiceReference1.LoginResult> LoginAsync(string username, string password, LoggerConfigurator.ServiceReference1.LoginUser loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFigKeyLoggerService/GetUserInfo", ReplyAction="http://tempuri.org/IFigKeyLoggerService/GetUserInfoResponse")]
        LoggerConfigurator.ServiceReference1.f_user GetUserInfo(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFigKeyLoggerService/GetUserInfo", ReplyAction="http://tempuri.org/IFigKeyLoggerService/GetUserInfoResponse")]
        System.Threading.Tasks.Task<LoggerConfigurator.ServiceReference1.f_user> GetUserInfoAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFigKeyLoggerService/SQLConnection", ReplyAction="http://tempuri.org/IFigKeyLoggerService/SQLConnectionResponse")]
        bool SQLConnection();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFigKeyLoggerService/SQLConnection", ReplyAction="http://tempuri.org/IFigKeyLoggerService/SQLConnectionResponse")]
        System.Threading.Tasks.Task<bool> SQLConnectionAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFigKeyLoggerServiceChannel : LoggerConfigurator.ServiceReference1.IFigKeyLoggerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FigKeyLoggerServiceClient : System.ServiceModel.ClientBase<LoggerConfigurator.ServiceReference1.IFigKeyLoggerService>, LoggerConfigurator.ServiceReference1.IFigKeyLoggerService {
        
        public FigKeyLoggerServiceClient() {
        }
        
        public FigKeyLoggerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FigKeyLoggerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FigKeyLoggerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FigKeyLoggerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public LoggerConfigurator.ServiceReference1.CompositeType GetDataUsingDataContract(LoggerConfigurator.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<LoggerConfigurator.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(LoggerConfigurator.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public LoggerConfigurator.ServiceReference1.LoginResult Login(string username, string password, LoggerConfigurator.ServiceReference1.LoginUser loginUser) {
            return base.Channel.Login(username, password, loginUser);
        }
        
        public System.Threading.Tasks.Task<LoggerConfigurator.ServiceReference1.LoginResult> LoginAsync(string username, string password, LoggerConfigurator.ServiceReference1.LoginUser loginUser) {
            return base.Channel.LoginAsync(username, password, loginUser);
        }
        
        public LoggerConfigurator.ServiceReference1.f_user GetUserInfo(string userName) {
            return base.Channel.GetUserInfo(userName);
        }
        
        public System.Threading.Tasks.Task<LoggerConfigurator.ServiceReference1.f_user> GetUserInfoAsync(string userName) {
            return base.Channel.GetUserInfoAsync(userName);
        }
        
        public bool SQLConnection() {
            return base.Channel.SQLConnection();
        }
        
        public System.Threading.Tasks.Task<bool> SQLConnectionAsync() {
            return base.Channel.SQLConnectionAsync();
        }
    }
}
